services:
  splunk:
    image: splunk/splunk:latest
    container_name: splunk
    environment:
      SPLUNK_START_ARGS: --accept-license
      SPLUNK_HEC_TOKEN: 00000000-0000-0000-0000-000000000000
      SPLUNK_HEC_ENABLE: "true"
      SPLUNK_PASSWORD: "Admin@123"
    ports:
      - "8000:8000"
      - "8088:8088"
      - "8089:8089"
    volumes:
      - splunk-data:/opt/splunk/var
    networks:
      - logistics-net
    restart: always

  mysql:
    image: mysql:8.0
    container_name: mysql_db
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: logistics_db
      MYSQL_USER: logistics_user
      MYSQL_PASSWORD: logistics_password
    ports:
      - "3306:3306"
    networks:
      - logistics-net
    restart: always
    volumes:
      - ./docker/mysql/init.sql:/docker-entrypoint-initdb.d/init.sql

  kafka:
    image: landoop/fast-data-dev:latest
    container_name: kafka
    environment:
      RUNTESTS: 0
      SAMPLEDATA: 0
      ADV_HOST: kafka
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:9093
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,PLAINTEXT_HOST://0.0.0.0:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
    ports:
      - "9092:9092"
      - "9093:9093"
      - "2181:2181"
      - "3030:3030"
      - "8081:8081"
      - "8082:8082"
      - "8083:8083"
    networks:
      - logistics-net
    restart: always

#  logistics-tracking:
#    build: .
#    container_name: logistics-tracking-app
#    depends_on:
#      - mysql
#      - kafka
#      - redis
#    environment:
#      SPRING_PROFILES_ACTIVE: docker
#      SPRING_DATASOURCE_URL: jdbc:mysql://mysql_db:3306/logistics_db
#      SPRING_DATASOURCE_USERNAME: logistics_user
#      SPRING_DATASOURCE_PASSWORD: logistics_password
#      SPRING_JPA_HIBERNATE_DDL_AUTO: update
#      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
#      SPRING_REDIS_HOST: redis
#      SPRING_REDIS_PORT: 6379
#    ports:
#      - "8080:8080"
#    networks:
#      - logistics-net
#    restart: always

  redis:
    image: redis:latest
    container_name: redis-container
    restart: always
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis-data:/data
    networks:
      - logistics-net

networks:
  logistics-net:
    driver: bridge

volumes:
  redis-data:
  splunk-data:
